@page "/"
@using ContactManagementSystem.Models
@inject ContactManagementSystem.Services.ContactService service
@inject IModalService modal 
@inject NavigationManager NavigationManager

<div class="display-3">Contact List!</div>
<br/>
<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <a class="navbar-brand" href="#">Search: </a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item">
                <input type="text" placeholder="First or Last Name" class="nav-link" @oninput="SearchResult" />
            </li>
        </ul>
        <ul class="navbar-nav ">
            <li class="nav-item">
                <a class="navbar-brand">Sort By:</a>
            </li>
            <li class="nav-item">
                <a class="nav-link @DisableSort()" @onclick="@SortByLastName" href="#"><span class="oi oi-sort-descending" aria-hidden="true"></span>Last Name</a>
            </li>
            <li class="nav-item">
                <a class="nav-link @DisableSort()" @onclick="@SortByFirstName" href="#"><span class="oi oi-sort-descending" aria-hidden="true"></span>First Name</a>
            </li>
        </ul>

    </div>
</nav>

<br/>

@if (contacts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    Last Name
                </th>
                <th>
                    First Name
                </th>
                <th>
                    Phone Number
                </th>
                <th>
                    Birth Date
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in contacts)
            {
                <tr>
                    <td>
                        @item.LastName
                    </td>
                    <td>
                        @item.FirstName
                    </td>
                    <td>
                        @item.PhoneNumber
                    </td>
                    <td>
                        @item.BirthDate
                    </td>
                    <td>
                        <a href="./EditContact/@item.Id"><span class="oi oi-pencil" aria-hidden="true"></span> Edit</a> |
                        <a @onclick="@(() => ShowDeleteContact(@item.Id))" href="#"><span class="oi oi-trash" aria-hidden="true"></span> Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code{
    //Properties
    private string Search { get; set; }

    //Contact request
    List<ContactEntity> contacts = new List<ContactEntity>();

    protected override async Task OnInitializedAsync()
    {
        contacts = await Task.Run(() => service.GetAll());
    }

    //Extra Methods

    string DisableSort() => contacts.Count() <= 1 ? "disabled" : "";

    void SortByFirstName() => contacts = contacts.OrderBy(x => x.FirstName).ToList();

    void SortByLastName() => contacts = contacts.OrderBy(x => x.LastName).ToList();

    async Task SearchResult(ChangeEventArgs args)
    {
        contacts = await service.GetAll();


        if (args.Value != null && args.Value.ToString() != "")
        {
            var search = args.Value.ToString().ToLower();
            contacts = contacts.FindAll(x => x.LastName.ToLower() == search || x.FirstName.ToLower() == search).ToList();
        }
    }

    //Modal

    [CascadingParameter]
    public IModalService Modal { get; set; }

    void ShowDeleteContact(Guid Id)
    {
        var parameters = new ModalParameters();
        parameters.Add(nameof(DeleteContact.CurrentId), Id);

        var options = new ModalOptions()
        {
            HideCloseButton = false,
            Animation = ModalAnimation.FadeInOut(1)
        };

        Modal.Show<DeleteContact>("Confirm Delete", parameters, options);
    }


}
